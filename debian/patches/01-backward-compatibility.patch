Description: Preserves the source compatibility with older versions of the API
Author: Emmanuel Bourg <ebourg@apache.org>
Forwarded: no
--- a/src/main/java/javax/servlet/ServletContext.java
+++ b/src/main/java/javax/servlet/ServletContext.java
@@ -905,8 +905,7 @@
      *
      * @since Servlet 4.0
      */
-    public ServletRegistration.Dynamic addJspFile(
-        String servletName, String jspFile);
+    default public ServletRegistration.Dynamic addJspFile(String servletName, String jspFile) { return null; }
 
 
     /**
@@ -1636,7 +1635,7 @@
      *
      * @since Servlet 3.1
      */
-    public String getVirtualServerName();
+    default public String getVirtualServerName() { return null; }
 
 
     /**
@@ -1654,7 +1653,7 @@
      *
      * @since Servlet 4.0
      */
-    public int getSessionTimeout();
+    default public int getSessionTimeout() { return -1; }
 
 
     /**
@@ -1673,7 +1672,7 @@
      *
      * @since Servlet 4.0
      */
-    public void setSessionTimeout(int sessionTimeout);
+    default public void setSessionTimeout(int sessionTimeout) { }
 
 
     /**
@@ -1694,7 +1693,7 @@
      *
      * @since Servlet 4.0
      */
-    public String getRequestCharacterEncoding();
+    default public String getRequestCharacterEncoding() { return null; }
 
 
     /**
@@ -1713,7 +1712,7 @@
      *
      * @since Servlet 4.0
      */
-    public void setRequestCharacterEncoding(String encoding);
+    default public void setRequestCharacterEncoding(String encoding) { }
 
 
     /**
@@ -1734,7 +1733,7 @@
      *
      * @since Servlet 4.0
      */
-    public String getResponseCharacterEncoding();
+    default public String getResponseCharacterEncoding() { return null; }
 
 
     /**
@@ -1753,5 +1752,5 @@
      *
      * @since Servlet 4.0
      */
-    public void setResponseCharacterEncoding(String encoding);
+    default public void setResponseCharacterEncoding(String encoding) { }
 }
--- a/src/main/java/javax/servlet/ServletRequest.java
+++ b/src/main/java/javax/servlet/ServletRequest.java
@@ -124,7 +124,7 @@
      *
      * @since Servlet 3.1
      */
-    public long getContentLengthLong();
+    default public long getContentLengthLong() { return getContentLength(); }
     
     /**
      * Returns the MIME type of the body of the request, or 
@@ -482,7 +482,7 @@
      *
      * @since Servlet 3.0
      */
-    public ServletContext getServletContext();
+    default public ServletContext getServletContext() { return null; }
 
     /**
      * Puts this request into asynchronous mode, and initializes its
@@ -527,7 +527,7 @@
      * @see AsyncContext#dispatch()
      * @since Servlet 3.0
      */
-    public AsyncContext startAsync() throws IllegalStateException;
+    default public AsyncContext startAsync() throws IllegalStateException { return null; }
  
     /**
      * Puts this request into asynchronous mode, and initializes its
@@ -594,9 +594,7 @@
      *
      * @since Servlet 3.0
      */
-    public AsyncContext startAsync(ServletRequest servletRequest,
-                                   ServletResponse servletResponse)
-            throws IllegalStateException;
+    default public AsyncContext startAsync(ServletRequest servletRequest, ServletResponse servletResponse) throws IllegalStateException { return null; }
    
     /**
      * Checks if this request has been put into asynchronous mode.
@@ -615,7 +613,7 @@
      *
      * @since Servlet 3.0
      */
-    public boolean isAsyncStarted();
+    default public boolean isAsyncStarted() { return false; }
 
     /**
      * Checks if this request supports asynchronous operation.
@@ -630,7 +628,7 @@
      *
      * @since Servlet 3.0
      */
-    public boolean isAsyncSupported();
+    default public boolean isAsyncSupported() { return false; }
 
     /**
      * Gets the AsyncContext that was created or reinitialized by the
@@ -648,7 +646,7 @@
      *
      * @since Servlet 3.0
      */
-    public AsyncContext getAsyncContext();
+    default public AsyncContext getAsyncContext() { return null; }
 
     /**
      * Gets the dispatcher type of this request.
@@ -681,7 +679,7 @@
      *
      * @since Servlet 3.0
      */
-    public DispatcherType getDispatcherType();
+    default public DispatcherType getDispatcherType() { return null; }
 
 }
 
--- a/src/main/java/javax/servlet/ServletResponse.java
+++ b/src/main/java/javax/servlet/ServletResponse.java
@@ -228,7 +228,7 @@
      *
      * @since Servlet 3.1
      */
-    public void setContentLengthLong(long len);
+    default public void setContentLengthLong(long len) { setContentLength((int) len); }
 
     /**
      * Sets the content type of the response being sent to
--- a/src/main/java/javax/servlet/http/HttpServletRequest.java
+++ b/src/main/java/javax/servlet/http/HttpServletRequest.java
@@ -591,7 +591,7 @@
      *
      * @since Servlet 3.1
      */
-    public String changeSessionId();
+    default public String changeSessionId() { return null; }
 
     /**
      * Checks whether the requested session ID is still valid.
@@ -677,8 +677,7 @@
      *
      * @since Servlet 3.0
      */
-    public boolean authenticate(HttpServletResponse response)
-	throws IOException,ServletException;
+    default public boolean authenticate(HttpServletResponse response) throws IOException,ServletException { throw new ServletException("Not implemented"); }
 
     /**
      * Validate the provided username and password in the password validation
@@ -717,8 +716,7 @@
      *
      * @since Servlet 3.0
      */
-    public void login(String username, String password)
-	throws ServletException;
+    default public void login(String username, String password) throws ServletException { throw new ServletException("Not implemented"); }
 
     /**
      * Establish <code>null</code> as the value returned when
@@ -729,7 +727,7 @@
      *
      * @since Servlet 3.0
      */
-    public void logout() throws ServletException;
+    default public void logout() throws ServletException { throw new ServletException("Not implemented"); }
 
     /**
      * Gets all the {@link Part} components of this request, provided
@@ -762,7 +760,7 @@
      *
      * @since Servlet 3.0
      */
-    public Collection<Part> getParts() throws IOException, ServletException;
+    default public Collection<Part> getParts() throws IOException, ServletException { throw new ServletException("Not implemented"); }
 
     /**
      * Gets the {@link Part} with the given name.
@@ -789,7 +787,7 @@
      *
      * @since Servlet 3.0
      */
-    public Part getPart(String name) throws IOException, ServletException;
+    default public Part getPart(String name) throws IOException, ServletException { throw new ServletException("Not implemented"); }
 
     /**
      * Creates an instance of <code>HttpUpgradeHandler</code> for a given
@@ -811,8 +809,7 @@
      *
      * @since Servlet 3.1
      */
-    public <T extends HttpUpgradeHandler> T  upgrade(Class<T> handlerClass)
-        throws IOException, ServletException;
+    default public <T extends HttpUpgradeHandler> T  upgrade(Class<T> handlerClass) throws IOException, ServletException { throw new ServletException("Not implemented"); }
 
     /**
      * Get the request trailer fields.
--- a/src/main/java/javax/servlet/http/HttpServletResponse.java
+++ b/src/main/java/javax/servlet/http/HttpServletResponse.java
@@ -354,7 +354,7 @@
      *
      * @since Servlet 3.0
      */
-    public int getStatus();
+    default public int getStatus() { return -1; }
 
     /**
      * Gets the value of the response header with the given name.
@@ -375,7 +375,7 @@
      *
      * @since Servlet 3.0
      */
-    public String getHeader(String name); 
+    default public String getHeader(String name) { return null; }
 
     /**
      * Gets the values of the response header with the given name.
@@ -395,7 +395,7 @@
      *
      * @since Servlet 3.0
      */			
-    public Collection<String> getHeaders(String name); 
+    default public Collection<String> getHeaders(String name) { return null; }
     
     /**
      * Gets the names of the headers of this response.
@@ -413,7 +413,7 @@
      *
      * @since Servlet 3.0
      */
-    public Collection<String> getHeaderNames();
+    default public Collection<String> getHeaderNames() { return null; }
 
     /**
      * Sets the supplier of trailer headers.
